{"version":3,"sources":["Screener.js","search.js","Chart.js","social-config.js","login.js","ScreenNav.js","App.js","serviceWorker.js","index.js"],"names":["pointerTothis","myptr","Chart","style","marginLeft","width","height","data","x","this","props","stockChartValueX","y","stockChartValueY","type","mode","marker","color","layout","title","stockName","autosize","config","responsive","React","Component","datal","Screener","state","presentPrice","change","changepercent","QuoteX","QuoteY","padding","inProgress","count","fetchCost","API_CALL","QUOTE_CALL","stockValuesX","stockValuesY","quotex","quotey","fetch","then","response","json","key","push","setState","parseFloat","k","prevProps","display","float","asyncOnClick","filename","fontFamily","backgroundColor","borderRadius","googleConfig","client_id","scope","facebookConfig","appId","cookie","xfbml","version","Login","showModal","loading","error","method","console","log","Button","className","variant","textAlign","marginBottom","onClick","openModal","id","visible","onCloseModal","closeModal","bind","tabs","afterChange","afterTabsChange","loginError","label","registerError","startLoading","finishLoading","providers","facebook","onLoginSuccess","onLoginFail","google","Search","divRef","createRef","e","calledit","val","target","value","Form","inline","FormControl","onChange","mychangeHandler","placeholder","callit","ScreenNav","presentAddress","node","basename","process","path","render","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","changeAddress","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"sMAMIA,ECDAC,E,sGC6BWC,E,uKA5BX,OACE,kBAAC,IAAD,CACEC,MAAO,CACLC,WAAY,OACZC,MAAO,MACPC,OAAQ,QAEVC,KAAM,CACJ,CACEC,EAAGC,KAAKC,MAAMC,iBACdC,EAAGH,KAAKC,MAAMG,iBACdC,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAAEC,MAAO,YAGrBC,OAAQ,CACNZ,OAAQ,IACRa,MAAOV,KAAKC,MAAMU,UAClBC,UAAU,GAEZC,OAAQ,CACNC,YAAY,S,GAzBFC,IAAMC,W,yBFEtBC,EAAQ,GAmOGC,E,kDAhOb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAEDkB,MAAQ,CACXjB,iBAAkB,GAClBE,iBAAkB,GAClBO,UAAW,EAAKV,MAAMU,UACtBS,aAAc,EACdC,OAAQ,EACRC,cAAe,EACfC,OAAQ,GACRC,OAAQ,GACRC,QAAS,CAAC,MAAO,MAAO,OACxBC,YAAY,EACZC,MAAO,GAdQ,E,gEAkBjBpC,EAAgBS,KAEhBA,KAAK4B,c,kCAIL,IACIC,EACF,gFACA7B,KAAKC,MAAMU,UADX,kDAIEmB,EACF,kEACA9B,KAAKC,MAAMU,UADX,+BAIEoB,EAAe,GACfC,EAAe,GACfC,EAAS,GACTC,EAAS,GACbC,MAAML,GACHM,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUtC,GAad,IAAK,IAAIyC,KAZTN,EAAS,CACP,SACA,OACA,OACA,MACA,QACA,SACA,qBACA,iBACA,SACA,kBAEcnC,EAAK,gBACnBoC,EAAOM,KAAK1C,EAAK,gBAAgByC,IAUnC,GARAhD,EAAckD,SAAS,CACrBlB,OAAQU,EACRT,OAAQU,EACRd,aAAcc,EAAO,GACrBb,OAAQa,EAAO,GACfZ,cAAeY,EAAO,KAGpBQ,WAAWnD,EAAc4B,MAAME,QAAU,EAAG,CAE9C9B,EAAckD,SAAS,CAAEhB,QADjB,CAAC,MAAO,MAAO,SAEvBlC,EAAckD,SAAS,CAAEjC,MAAO,iBAC3B,GAA+C,IAA3CkC,WAAWnD,EAAc4B,MAAME,QAAe,CAEvD9B,EAAckD,SAAS,CAAEhB,QADjB,CAAC,MAAO,MAAO,aAElB,CAELlC,EAAckD,SAAS,CAAEhB,QADjB,CAAC,MAAO,MAAO,SAEvBlC,EAAckD,SAAS,CAAEjC,MAAO,gBAItC2B,MAAMN,GACHO,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUtC,GAYd,IAAK,IAAIyC,KAXTtB,EAAMuB,KAAK,CACT,OACA,OACA,OACA,MACA,QACA,iBACA,SACA,kBACA,sBAEc1C,EAAK,uBAAwB,CAC3C,IAAI6C,EAAI,GACRA,EAAEH,KAAKD,GACPI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,YACxCI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,YACxCI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,WACxCI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,aACxCI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,sBACxCI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,cACxCI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,uBACxCI,EAAEH,KAAK1C,EAAK,uBAAuByC,GAAK,yBACxCR,EAAaS,KAAKD,GAClBP,EAAaQ,KAAK1C,EAAK,uBAAuByC,GAAK,aACnDtB,EAAMuB,KAAKG,GAEbpD,EAAckD,SAAS,CACrBvC,iBAAkB6B,EAClB3B,iBAAkB4B,IAEpBzC,EAAckD,SAAS,CAAEf,YAAY,S,yCAGxBkB,GAGb5C,KAAKC,MAAMU,YAAciC,EAAUjC,YACrCX,KAAKyC,SAAS,CAAEf,YAAY,IAC5B1B,KAAK4B,e,+BAIP,OAAI5B,KAAKmB,MAAMO,WAEX,kBAAC,IAAD,CAAQrB,KAAK,YAAYG,MAAM,UAAUX,OAAO,MAAMD,MAAM,QAI5D,6BAGE,yBAAKF,MAAO,CAAEmD,QAAS,eAAgBC,MAAO,UAC5C,kBAAC,UAAD,CACEhD,KAAMmB,EACN8B,cAAc,EACdC,SAAU,eAAiBhD,KAAKC,MAAMU,UAAY,QAHpD,eAQF,6BACA,yBACEjB,MAAO,CACLmD,QAAS,eACTC,MAAO,OACPG,WAAY,cAGd,8BACGjD,KAAKC,MAAMU,UADd,IAC0B,IACxB,0BAAMjB,MAAO,CAAEc,MAAOR,KAAKmB,MAAMX,QAC9BR,KAAKmB,MAAMC,cACN,IAJV,MAKM,IACJ,0BAAM1B,MAAO,CAAEc,MAAOR,KAAKmB,MAAMX,QAC9B,IACAR,KAAKmB,MAAME,OAAQ,KARxB,IAUIrB,KAAKmB,MAAMG,cAVf,MAaF,6BACA,6BACA,yBACE5B,MAAO,CACLmD,QAAS,eACTC,MAAO,OAGPG,WAAY,YACZzC,MAAO,UAGT,0BACEd,MAAO,CACLwD,gBAAiB,UACjBzB,QAASzB,KAAKmB,MAAMM,QAAQ,GAC5B0B,aAAc,QAJlB,QASA,0BACEzD,MAAO,CACLwD,gBAAiB,UACjBzB,QAASzB,KAAKmB,MAAMM,QAAQ,GAC5B0B,aAAc,QAJlB,QASA,0BACEzD,MAAO,CACLwD,gBAAiB,UACjBzB,QAASzB,KAAKmB,MAAMM,QAAQ,GAC5B0B,aAAc,QAJlB,QAUF,6BACA,6BACA,yBAAKzD,MAAO,CAAEmD,QAAS,kBACrB,kBAAC,EAAD,CACElC,UAAWX,KAAKC,MAAMU,UACtBT,iBAAkBF,KAAKmB,MAAMjB,iBAC7BE,iBAAkBJ,KAAKmB,MAAMf,mBAE/B,8DACmCJ,KAAKC,MAAMU,UAD9C,oC,GAxNWI,IAAMC,W,wCGMhBoC,EANE,CACbC,UACE,0EACFC,MAAO,8CAIIC,EAdI,CACfC,MAAO,kBACPC,QAAQ,EACRC,OAAO,EACPC,QAAS,QACTL,MAAO,SCgHMM,E,kDA/Gb,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IAEDkB,MAAQ,CACX0C,WAAW,EACXC,SAAS,EACTC,MAAO,MANQ,E,wDAWjB/D,KAAKyC,SAAS,CACZoB,WAAW,M,mCAKb7D,KAAKyC,SAAS,CACZoB,WAAW,EACXE,MAAO,S,qCAIIC,EAAQ3B,GACrB4B,QAAQC,IAAI,4BAA8BF,GAC1ChE,KAAKyC,SAAS,CACZqB,SAAS,M,kCAIDE,EAAQ3B,GAClB4B,QAAQC,IAAI,uBAAyBF,GACrChE,KAAKyC,SAAS,CACZsB,MAAO1B,IAETrC,KAAKyC,SAAS,CACZqB,SAAS,M,qCAKX9D,KAAKyC,SAAS,CACZqB,SAAS,M,sCAKX9D,KAAKyC,SAAS,CACZqB,SAAS,M,wCAKX9D,KAAKyC,SAAS,CACZsB,MAAO,S,+BAGD,IAAD,OACP,OACE,6BACE,kBAACI,EAAA,EAAD,CACEC,UAAU,MACVC,QAAQ,UACR3E,MAAO,CACLmD,QAAS,eACTyB,UAAW,SACXC,aAAc,OAEhBC,QAAS,WACP,EAAKC,cATT,WAcA,kBAAC,IAAD,CACEC,GAAG,OACHC,QAAS3E,KAAKmB,MAAM0C,UACpBe,aAAc5E,KAAK6E,WAAWC,KAAK9E,MACnC8D,QAAS9D,KAAKmB,MAAM2C,QACpBC,MAAO/D,KAAKmB,MAAM4C,MAElBgB,KAAM,CACJC,YAAahF,KAAKiF,gBAAgBH,KAAK9E,OAEzCkF,WAAY,CACVC,MAAO,uCAETC,cAAe,CACbD,MAAO,uCAETE,aAAcrF,KAAKqF,aAAaP,KAAK9E,MACrCsF,cAAetF,KAAKsF,cAAcR,KAAK9E,MACvCuF,UAAW,CACTC,SAAU,CACR3E,OAAQ0C,EACRkC,eAAgBzF,KAAKyF,eAAeX,KAAK9E,MACzC0F,YAAa1F,KAAK0F,YAAYZ,KAAK9E,MACnCmF,MAAO,0BAETQ,OAAQ,CACN9E,OAAQuC,EACRqC,eAAgBzF,KAAKyF,eAAeX,KAAK9E,MACzC0F,YAAa1F,KAAK0F,YAAYZ,KAAK9E,MACnCmF,MAAO,gC,GAxGDpE,IAAMC,W,wBH4CX4E,E,kDA1Cb,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXR,UAAW,EAAKV,MAAMU,WAHP,E,gEAOjBX,KAAK6F,OAAS9E,IAAM+E,YACpBtG,EAAQQ,O,6BAEH+F,GACLvG,EAAMS,MAAM+F,SAASxG,EAAM2B,MAAMR,a,sCAEnBoF,GACd,IAAIE,EAAMF,EAAEG,OAAOC,MACnB3G,EAAMiD,SAAS,CAAE9B,UAAWsF,M,+BAK5B,OACE,kBAACG,EAAA,EAAD,CACEC,QAAM,EACN3G,MAAO,CACL4E,UAAW,SACXzB,QAAS,eACT0B,aAAc,QAGhB,kBAAC+B,EAAA,EAAD,CACEjG,KAAK,OACLkG,SAAUvG,KAAKwG,gBACfC,YAAY,cACZrC,UAAU,YAEZ,kBAACD,EAAA,EAAD,CAAQE,QAAQ,UAAUG,QAASxE,KAAK0G,QAAxC,e,GApCa1F,a,QIqEN2F,E,kDA9Db,WAAY1G,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXR,UAAW,MACXiG,eAAgB,KAJD,E,mDAOZC,GACL7G,KAAKyC,SAAS,CAAE9B,UAAWkG,M,+BAMnB,IAAD,OAEP,OACE,yBAAKzC,UAAU,eACb,kBAAC,IAAD,CAAe0C,SAAUC,iBACvB,kBAAC,IAAD,CACEC,KAAK,IACLC,OAAQ,WACN,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,YACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiB/C,GAAG,oBAClB,kBAACgD,EAAA,EAAD,CAAKtD,UAAU,WACb,kBAACsD,EAAA,EAAIC,KAAL,CAAUL,KAAK,KAAf,QACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,2GAAf,WAKF,kBAAC,EAAD,CACE3G,UAAW,EAAKQ,MAAMR,UACtBqF,SAAU,SAACa,GACT,EAAKxF,OAAOwF,MAIf,KACD,kBAAC,EAAD,QAGJ,kBAAC,EAAD,CACEe,cAAe,WACb,EAAKA,cAAc,WAErBjH,UAAW,EAAKQ,MAAMR,gBAK7B,U,GAxDWK,aCET6G,MAVf,WACE,OACE,yBAAKzD,UAAU,OACb,kBAAC,EAAD,QCKc0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlB,OACP,kBAAC,IAAMmB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrG,MAAK,SAAAsG,GACJA,EAAaC,gBAEdC,OAAM,SAAA7E,GACLE,QAAQF,MAAMA,EAAM8E,c","file":"static/js/main.e75ab976.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport { CSVLink } from \"react-csv\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\nlet datal = [];\r\nlet pointerTothis;\r\nclass Screener extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stockChartValueX: [],\r\n      stockChartValueY: [],\r\n      stockName: this.props.stockName,\r\n      presentPrice: 0,\r\n      change: 0,\r\n      changepercent: 0,\r\n      QuoteX: [],\r\n      QuoteY: [],\r\n      padding: [\"4px\", \"4px\", \"4px\"],\r\n      inProgress: true,\r\n      count: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    pointerTothis = this;\r\n    // this.props.changeAddress();\r\n    this.fetchCost();\r\n  }\r\n\r\n  fetchCost() {\r\n    const APIKEY = \"2RON97OB1OCVMAXA\";\r\n    let API_CALL =\r\n      \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\" +\r\n      this.props.stockName +\r\n      \".BSE&outputsize=compact&apikey=\" +\r\n      APIKEY;\r\n    let QUOTE_CALL =\r\n      \"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\" +\r\n      this.props.stockName +\r\n      \".BSE&apikey=\" +\r\n      APIKEY;\r\n    let stockValuesX = [];\r\n    let stockValuesY = [];\r\n    let quotex = [];\r\n    let quotey = [];\r\n    fetch(QUOTE_CALL)\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        quotex = [\r\n          \"symbol\",\r\n          \"open\",\r\n          \"high\",\r\n          \"low\",\r\n          \"price\",\r\n          \"volume\",\r\n          \"latest trading day\",\r\n          \"previous close\",\r\n          \"change\",\r\n          \"change percent\",\r\n        ];\r\n        for (var key in data[\"Global Quote\"]) {\r\n          quotey.push(data[\"Global Quote\"][key]);\r\n        }\r\n        pointerTothis.setState({\r\n          QuoteX: quotex,\r\n          QuoteY: quotey,\r\n          presentPrice: quotey[4],\r\n          change: quotey[8],\r\n          changepercent: quotey[9],\r\n        });\r\n\r\n        if (parseFloat(pointerTothis.state.change) < 0) {\r\n          let k = [\"8px\", \"4px\", \"4px\"];\r\n          pointerTothis.setState({ padding: k });\r\n          pointerTothis.setState({ color: \"#e75757\" });\r\n        } else if (parseFloat(pointerTothis.state.change) === 0) {\r\n          let k = [\"4px\", \"8px\", \"4px\"];\r\n          pointerTothis.setState({ padding: k });\r\n        } else {\r\n          let k = [\"4px\", \"4px\", \"8px\"];\r\n          pointerTothis.setState({ padding: k });\r\n          pointerTothis.setState({ color: \"#2BAD60\" });\r\n        }\r\n        // pointerTothis.setState({ inProgress: false });\r\n      });\r\n    fetch(API_CALL)\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        datal.push([\r\n          \"date\",\r\n          \"open\",\r\n          \"high\",\r\n          \"low\",\r\n          \"close\",\r\n          \"adjusted close\",\r\n          \"volume\",\r\n          \"dividend amount\",\r\n          \"split coefficient\",\r\n        ]);\r\n        for (var key in data[\"Time Series (Daily)\"]) {\r\n          let k = [];\r\n          k.push(key);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"1. open\"]);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"2. high\"]);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"3. low\"]);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"4. close\"]);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"5. adjusted close\"]);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"6. volume\"]);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"7. dividend amount\"]);\r\n          k.push(data[\"Time Series (Daily)\"][key][\"8. split coefficient\"]);\r\n          stockValuesX.push(key);\r\n          stockValuesY.push(data[\"Time Series (Daily)\"][key][\"4. close\"]);\r\n          datal.push(k);\r\n        }\r\n        pointerTothis.setState({\r\n          stockChartValueX: stockValuesX,\r\n          stockChartValueY: stockValuesY,\r\n        });\r\n        pointerTothis.setState({ inProgress: false });\r\n      });\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n\r\n    if (this.props.stockName !== prevProps.stockName) {\r\n      this.setState({ inProgress: true });\r\n      this.fetchCost();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.inProgress) {\r\n      return (\r\n        <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n      );\r\n    } else\r\n      return (\r\n        <div>\r\n          {/* <strong>STOCK SCREENER</strong> */}\r\n\r\n          <div style={{ display: \"inline-block\", float: \"right\" }}>\r\n            <CSVLink\r\n              data={datal}\r\n              asyncOnClick={true}\r\n              filename={\"Times series\" + this.props.stockName + \".csv\"}\r\n            >\r\n              import csv\r\n            </CSVLink>\r\n          </div>\r\n          <br></br>\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              float: \"left\",\r\n              fontFamily: \"Helvetica\",\r\n            }}\r\n          >\r\n            <span>\r\n              {this.props.stockName}:{\" \"}\r\n              <span style={{ color: this.state.color }}>\r\n                {this.state.presentPrice}\r\n              </span>{\" \"}\r\n              INR{\" \"}\r\n              <span style={{ color: this.state.color }}>\r\n                {\" \"}\r\n                {this.state.change}{\" \"}\r\n              </span>\r\n              ({this.state.changepercent})\r\n            </span>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              float: \"left\",\r\n              // marginBottom: \"12px\",\r\n\r\n              fontFamily: \"Helvetica\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#e75757\",\r\n                padding: this.state.padding[0],\r\n                borderRadius: \"4px\",\r\n              }}\r\n            >\r\n              Sell\r\n            </span>\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#f4c430\",\r\n                padding: this.state.padding[1],\r\n                borderRadius: \"4px\",\r\n              }}\r\n            >\r\n              Hold\r\n            </span>\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#2BAD60\",\r\n                padding: this.state.padding[2],\r\n                borderRadius: \"4px\",\r\n              }}\r\n            >\r\n              Buy\r\n            </span>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <div style={{ display: \"inline-center\" }}>\r\n            <Chart\r\n              stockName={this.props.stockName}\r\n              stockChartValueX={this.state.stockChartValueX}\r\n              stockChartValueY={this.state.stockChartValueY}\r\n            ></Chart>\r\n            <p>\r\n              These are the closing prices of {this.props.stockName} plotted for\r\n              last 100 days\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\nexport default Screener;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nlet myptr;\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockName: this.props.stockName,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.divRef = React.createRef();\r\n    myptr = this;\r\n  }\r\n  callit(e) {\r\n    myptr.props.calledit(myptr.state.stockName);\r\n  }\r\n  mychangeHandler(e) {\r\n    let val = e.target.value;\r\n    myptr.setState({ stockName: val });\r\n    // console.log(myptr.state.stockName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        inline\r\n        style={{\r\n          textAlign: \"center\",\r\n          display: \"inline-block\",\r\n          marginBottom: \"4px\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          type=\"text\"\r\n          onChange={this.mychangeHandler}\r\n          placeholder=\"Security id\"\r\n          className=\"mr-sm-2\"\r\n        />\r\n        <Button variant=\"primary\" onClick={this.callit}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nclass Chart extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Plot\r\n        style={{\r\n          marginLeft: \"30px\",\r\n          width: \"95%\",\r\n          height: \"100%\",\r\n        }}\r\n        data={[\r\n          {\r\n            x: this.props.stockChartValueX,\r\n            y: this.props.stockChartValueY,\r\n            type: \"scatter\",\r\n            mode: \"lines+markers\",\r\n            marker: { color: \"purple\" },\r\n          },\r\n        ]}\r\n        layout={{\r\n          height: 500,\r\n          title: this.props.stockName,\r\n          autosize: true,\r\n        }}\r\n        config={{\r\n          responsive: true,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Chart;\r\n","const facebook = {\r\n  appId: \"558047108219015\",\r\n  cookie: true,\r\n  xfbml: true,\r\n  version: \"v2.11\",\r\n  scope: \"email\",\r\n};\r\nconst google = {\r\n  client_id:\r\n    \"15410921000-9ppfm8hm7l76qr4dv1ito2f3620rvvbv.apps.googleusercontent.com\",\r\n  scope: \"https://www.googleapis.com/auth/plus.login\",\r\n};\r\n\r\nexport const googleConfig = google;\r\nexport const facebookConfig = facebook;\r\n","import React from \"react\";\r\nimport ReactModalLogin from \"react-modal-login\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { facebookConfig, googleConfig } from \"./social-config\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModal: false,\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({\r\n      showModal: true,\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      showModal: false,\r\n      error: null,\r\n    });\r\n  }\r\n\r\n  onLoginSuccess(method, response) {\r\n    console.log(\"logged successfully with \" + method);\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  onLoginFail(method, response) {\r\n    console.log(\"logging failed with \" + method);\r\n    this.setState({\r\n      error: response,\r\n    });\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  startLoading() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n  }\r\n\r\n  finishLoading() {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  afterTabsChange() {\r\n    this.setState({\r\n      error: null,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"btn\"\r\n          variant=\"success\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            textAlign: \"center\",\r\n            marginBottom: \"4px\",\r\n          }}\r\n          onClick={() => {\r\n            this.openModal();\r\n          }}\r\n        >\r\n          Sign in\r\n        </Button>\r\n        <ReactModalLogin\r\n          id=\"form\"\r\n          visible={this.state.showModal}\r\n          onCloseModal={this.closeModal.bind(this)}\r\n          loading={this.state.loading}\r\n          error={this.state.error}\r\n          //  form={<Form></Form>}\r\n          tabs={{\r\n            afterChange: this.afterTabsChange.bind(this),\r\n          }}\r\n          loginError={{\r\n            label: \"Couldn't sign in, please try again.\",\r\n          }}\r\n          registerError={{\r\n            label: \"Couldn't sign up, please try again.\",\r\n          }}\r\n          startLoading={this.startLoading.bind(this)}\r\n          finishLoading={this.finishLoading.bind(this)}\r\n          providers={{\r\n            facebook: {\r\n              config: facebookConfig,\r\n              onLoginSuccess: this.onLoginSuccess.bind(this),\r\n              onLoginFail: this.onLoginFail.bind(this),\r\n              label: \"Continue with Facebook\",\r\n            },\r\n            google: {\r\n              config: googleConfig,\r\n              onLoginSuccess: this.onLoginSuccess.bind(this),\r\n              onLoginFail: this.onLoginFail.bind(this),\r\n              label: \"Continue with Google\",\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\n// import chart from \"./chart\";\r\nimport Screener from \"./Screener.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Login from \"./login\";\r\n// import NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport Search from \"./search.js\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nclass ScreenNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockName: \"NCC\",\r\n      presentAddress: \"/\",\r\n    };\r\n  }\r\n  change(node) {\r\n    this.setState({ stockName: node });\r\n    //console.log(node);\r\n  }\r\n  // changeAddress(node) {\r\n  //   this.setState({ presentAddress: node });\r\n  // }\r\n  render() {\r\n    // const store = configureStore({ history });\r\n    return (\r\n      <div className=\"ScreenerNav\">\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Route\r\n            path=\"/\"\r\n            render={() => {\r\n              return (\r\n                <div>\r\n                  <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#\">SCREENER</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                      <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#\">Home</Nav.Link>\r\n                        <Nav.Link href=\"https://docs.google.com/spreadsheets/d/1ymMHn4gE9Gjjtvw3bGVlD_9CbdfDm01_cLBRd5nRN_M/edit#gid=1328995412\">\r\n                          Browse\r\n                        </Nav.Link>\r\n                      </Nav>\r\n\r\n                      <Search\r\n                        stockName={this.state.stockName}\r\n                        calledit={(node) => {\r\n                          this.change(node);\r\n                        }}\r\n                      ></Search>\r\n\r\n                      {\"  \"}\r\n                      <Login></Login>\r\n                    </Navbar.Collapse>\r\n                  </Navbar>\r\n                  <Screener\r\n                    changeAddress={() => {\r\n                      this.changeAddress(\"/stock\");\r\n                    }}\r\n                    stockName={this.state.stockName}\r\n                  ></Screener>\r\n                </div>\r\n              );\r\n            }}\r\n          />{\" \"}\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScreenNav;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport ScreenNav from \"./ScreenNav\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScreenNav></ScreenNav>\n\n      {/* <chart></chart> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}